C51 COMPILER V9.01   DRV_LCD                                                               01/31/2019 11:34:21 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DRV_LCD
OBJECT MODULE PLACED IN .\Drv_LCD.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\C_Source\S1_HardDrv\V9811A_MCU\Drv_LCD.c LARGE WARNINGLEVEL(1) BROWSE IN
                    -CDIR(..\C_Source\S0_System;..\C_Source\S1_HardDrv;..\C_Source\S2_MyLib;..\C_Source\S3_ApiPlat;..\C_Source\S4_ApiUser;..\
                    -C_Source\S5_ApiProtocol;..\C_Source\S6_MyIncludes;..\C_Source\S1_HardDrv\V9811A_EMU;..\C_Source\S1_HardDrv\V9811A_MCU;..
                    -\C_Source\S1_HardDrv\E2P_24CXXX) DEBUG OBJECTEXTEND PRINT(.\Drv_LCD.lst) OBJECT(.\Drv_LCD.obj)

line level    source

   1          /*
   2          *****************Copyright (c)*************************************
   3          **      Hangzhou Xili Watthour Meter Manufacture Co., Ltd. 
   4          **--------------file info--------------------------------------------
   5          **name                  : Drv_LCD.c
   6          **Author                : maji
   7          **date                  : 2016-04-20 
   8          **description   : LCD模块的硬件驱动C代码
   9          **note                  : V9811A ，MERTER FOR DL03C
  10          **--------------------Version History -------------------------------------
  11          ** NO. Date         Ver      By         Description 
  12          **==============================================================
  13          ** 1   2016-04-26   v01.00   sosomj     1. frist version                             
  14          **
  15          **==============================================================
  16          */
  17          
  18          #include <MyIncludes_H.h>
  19          
  20          
  21          
  22          /*******************************************************************************************
  23          ** 函数名称: LCD_ON
  24          ** 函数描述: LCD打开显示
  25          ** 输入参数: 无
  26          ** 输出参数: 无 
  27          ** 说明    : 
  28          *******************************************************************************************/
  29          void LCD_ON(void)
  30          {
  31   1          LCDG=0;             //开LCD时钟
  32   1          CtrlLCDV=0; // 3.3V
  33   1          LCDCtrl= 0XD2;       //6C0TYPE=1, 6COM,300K,256HZ
  34   1      }
  35          
  36          
  37          /*******************************************************************************************
  38          ** 函数名称: Full_SEG
  39          ** 函数描述: 将SEG填入指定的值
  40          ** 输入参数: val:要填入的值
  41          ** 输出参数: 无 
  42          ** 说明    : 
  43          *******************************************************************************************/
  44          void Full_SEG(uint8 val)
  45          {
  46   1              LCDM8 =  val&0X3F;    
  47   1              LCDM9 =  val&0X3F;  
  48   1              LCDM10 =  val&0X3F; 
  49   1              LCDM11 =  val&0X3F; 
  50   1              LCDM12 =  val&0X3F; 
  51   1              LCDM13 =  val&0X3F; 
  52   1              LCDM14 =  val&0X3F; 
C51 COMPILER V9.01   DRV_LCD                                                               01/31/2019 11:34:21 PAGE 2   

  53   1              LCDM15 =  val&0X3F; 
  54   1      
  55   1              LCDM18 =  val&0X3F; 
  56   1              LCDM19 = val&0X3F; 
  57   1              LCDM20 =  val&0X3F; 
  58   1              LCDM21 =  val&0X3F; 
  59   1              LCDM22 =  val&0X3F; 
  60   1              LCDM23 =  val&0X3F; 
  61   1      
  62   1              LCDM30 =  val&0X3F; 
  63   1              LCDM31 =  val&0X3F; 
  64   1              LCDM32 =  val&0X3F; 
  65   1              LCDM33 =  val&0X3F; 
  66   1              LCDM34 =  val&0X3F; 
  67   1              LCDM35 =  val&0X3F; 
  68   1      
  69   1              LCDM38 =  val&0X3F; 
  70   1      }
  71          
  72          
  73          /*******************************************************************************************
  74          ** 函数名称: LCD_OFF
  75          ** 函数描述: LCD关闭显示
  76          ** 输入参数: 无
  77          ** 输出参数: 无 
  78          ** 说明    : 
  79          *******************************************************************************************/
  80          void LCD_OFF(void)
  81          {
  82   1          Full_SEG(0);
  83   1      /*  因为关闭后液晶会因为静电出现虚段码 mj,2016-6-12
  84   1          SegCtrl0 = 0;
  85   1          SegCtrl1 = 0;
  86   1          SegCtrl2 = 0;
  87   1          SegCtrl3 = 0;
  88   1          SegCtrl4 = 0;
  89   1          LCDCtrl = 0;
  90   1          LCDG = 1;   // 关闭 //
  91   1      */
  92   1      }
  93          
  94          /*******************************************************************************************
  95          ** 函数名称: LCD_Init
  96          ** 函数描述: LCD初始化
  97          ** 输入参数: 无
  98          ** 输出参数: 无 
  99          ** 说明    : 
 100          *******************************************************************************************/
 101          void Init_LCD(void)
 102          {
 103   1       //
 104   1           LCD_ON();
 105   1           Full_SEG(0);
 106   1          //SegCtrl0: seg0~7,  seg0~1 有效  //
 107   1          SegCtrl0=Bin(00000000);      // seg0~seg1  OFF //
 108   1          //SegCtrl1: seg8~15,  seg5~15 有效  //
 109   1          SegCtrl1=Bin(11111111);          // seg8~seg15  ON//
 110   1          //SegCtrl2: seg16~23,  seg18~23 有效  //
 111   1          SegCtrl2=Bin(11111100);     // seg18~seg23  ON//
 112   1          //SegCtrl3: seg24~31,  seg30~31 有效  //
 113   1          SegCtrl3=Bin(11000000);     // seg30~seg31  ON//
 114   1          //SegCtrl4: seg32~39,  seg32~35,  seg38~39有效  //
C51 COMPILER V9.01   DRV_LCD                                                               01/31/2019 11:34:21 PAGE 3   

 115   1          SegCtrl4=Bin(01001111);     // seg32~seg35    seg38  ON//   
 116   1      }
 117          
 118          
 119          //*****************************************************************
 120          //  Function:       void InitLCD(void)           
 121          //  Description:                                           
 122          //  Others:        len 为   
 123          //***************************************************************
 124          void Write_LCD(INT8U* bf_i2cData)
 125          {
 126   1              LCDM8 =  (*(bf_i2cData+0))&0X3F;    
 127   1              LCDM9 =  (*(bf_i2cData+1))&0X3F;  
 128   1              LCDM10 =  (*(bf_i2cData+2))&0X3F; 
 129   1              LCDM11 =  (*(bf_i2cData+3))&0X3F; 
 130   1              LCDM12 =  (*(bf_i2cData+4))&0X3F; 
 131   1              LCDM13 =  (*(bf_i2cData+5))&0X3F; 
 132   1              LCDM14 =  (*(bf_i2cData+6))&0X3F; 
 133   1              LCDM15 =  (*(bf_i2cData+7))&0X3F; 
 134   1      
 135   1              LCDM18 =  (*(bf_i2cData+8))&0X3F; 
 136   1              LCDM19 =  (*(bf_i2cData+9))&0X3F; 
 137   1              LCDM20 =  (*(bf_i2cData+10))&0X3F; 
 138   1              LCDM21 =  (*(bf_i2cData+11))&0X3F; 
 139   1              LCDM22 =  (*(bf_i2cData+12))&0X3F; 
 140   1              LCDM23 =  (*(bf_i2cData+13))&0X3F; 
 141   1      
 142   1              LCDM30 =  (*(bf_i2cData+14))&0X3F; 
 143   1              LCDM31 =  (*(bf_i2cData+15))&0X3F; 
 144   1              LCDM32 =  (*(bf_i2cData+16))&0X3F; 
 145   1              LCDM33 =  (*(bf_i2cData+17))&0X3F; 
 146   1              LCDM34 =  (*(bf_i2cData+18))&0X3F; 
 147   1              LCDM35 =  (*(bf_i2cData+19))&0X3F; 
 148   1      
 149   1              LCDM38 =  (*(bf_i2cData+20))&0X3F; 
 150   1      }
 151          
 152          
 153          
 154          /*******************************************************************************************
 155          **    END
 156          *******************************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    353    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
